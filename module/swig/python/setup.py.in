"""
::BOH
$Id$
$HeadURL: http://subversion/stuff/svn/owfs/trunk/setup.py $

Copyright (c) 2004, 2005 Peter Kropf. All rights reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
::EOH

distutils setup file for use in creating a Python module from the owfs
project.
"""


from distutils.core import setup, Extension
import string

classifiers = """
Development Status :: 4 - Beta
Environment :: Console
Intended Audience :: Developers
Intended Audience :: System Administrators
Operating System :: POSIX :: Linux
Programming Language :: C
Programming Language :: Python
Topic :: System :: Hardware
Topic :: Utilities
"""

enable_usb = '@ENABLE_USB@'
enable_mt = '@ENABLE_MT@'
have_darwin = '@HAVE_DARWIN@'

ow_libs = [ 'ow' ]
if have_darwin == 'true':
	ow_libs = [ ]

# have to split up the _CFLAGS, _LIBS variables since there are problem
# when they contain spaces. The append() function doesn't work very good.
# extra_l_args.append ( '@LIBUSB_CFLAGS@' )

# Should perhaps add ${LD_EXTRALIBS} ${OSLIBS} to extra_l_args too if
# supporting MacOSX.

extra_c_args = [ '-D_FILE_OFFSET_BITS=64' ]
extra_l_args = [ ]
if enable_usb == 'true':
    if len('@LIBUSB_CFLAGS@') > 0:
	extra_c_args = extra_c_args + string.split('@LIBUSB_CFLAGS@', ' ')

if enable_usb == 'true':
    if len('@LIBUSB_LIBS@') > 0:
	extra_l_args = extra_l_args + string.split('@LIBUSB_LIBS@', ' ')

if enable_mt == 'true':
    if len('@PTHREAD_CFLAGS@') > 0:
	extra_c_args = extra_c_args + string.split('@PTHREAD_CFLAGS@', ' ')

if enable_mt == 'true':
    if len('@PTHREAD_LIBS@') > 0:
	extra_l_args = extra_l_args + string.split('@PTHREAD_LIBS@', ' ')

if have_darwin == 'true':
	extra_l_args = extra_l_args + string.split('../../owlib/src/c/.libs/libow.so', ' ')

setup(
    name             = 'ow',
    description      = '1-wire hardware interface.',
    version          = '@VERSION@',
    author           = 'Peter Kropf',
    author_email     = 'pkropf@gmail.com',
    url              = 'http://www.owfs.org/',
    license          = 'GPL',
    platforms        = 'Linux',
    long_description = 'Interface with 1-wire controllers and sensors from Python.',
    classifiers      = filter( None, classifiers.split( '\n' ) ),
    packages         = ['ow'],
    ext_package      = 'ow',
    ext_modules      = [ Extension( '_OW',
                                    [ 'ow_wrap.c' ],
                                    include_dirs = [ '../../owlib/src/include',
                                                     '../../../src/include', ],
                                    library_dirs = [ '../../owlib/src/c/.libs', ],
                                    libraries    = ow_libs,
                                    extra_compile_args = [ arg for arg in extra_c_args
                                                           if len(arg) > 1 ],
                                    extra_link_args = [ arg for arg in extra_l_args
                                                           if len(arg) > 1 ],
                                    runtime_library_dirs = [ '@prefix@/lib' ],
                                    )
                         ],
    )

